"use strict";var f=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var D=Object.getOwnPropertyNames;var F=Object.prototype.hasOwnProperty;var J=(e,t)=>{for(var s in t)f(e,s,{get:t[s],enumerable:!0})},N=(e,t,s,c)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of D(t))!F.call(e,n)&&n!==s&&f(e,n,{get:()=>t[n],enumerable:!(c=j(t,n))||c.enumerable});return e};var O=e=>N(f({},"__esModule",{value:!0}),e);var b={};J(b,{default:()=>x});module.exports=O(b);var r=require("@raycast/api");var w=require("@raycast/api"),y=require("path"),g=require("fs/promises"),h=require("child_process");async function P(e,...t){let s=(0,y.join)(w.environment.assetsPath,"compiled_raycast_swift/Ruler");return await(0,g.chmod)(s,"755"),new Promise((c,n)=>{let p=[e];for(let i of t)try{p.push(JSON.stringify(i,(o,a)=>a===void 0?null:a))}catch(o){n(new d("Failed to serialize input to JSON: "+o.message));return}let l=(0,h.spawn)(s,p),u=[],m=[];l.stdout?.on("data",i=>{u.push(i.toString())}),l.stderr?.on("data",i=>{m.push(i.toString())}),l.on("exit",i=>{if(i===0)try{let o=u.join("").trim();o.length!=0?c(JSON.parse(o)):c(null)}catch(o){let a=new d("Failed to deserialize result from JSON: "+o.message);a.stdout=u.join("").trim(),a.stderr=m.join("").trim(),n(a)}else{let o=new d(m.join("").trim()||u.join("").trim()||"Could not get any data");o.stdout=u.join("").trim(),o.stderr=m.join("").trim(),n(o)}}),l.on("error",i=>{n(i)})})}async function S(e){return await P("measureDistance",e)}var d=class extends Error{constructor(t){super(t),this.name="SwiftError"}};async function x(){await(0,r.closeMainWindow)();try{let e=await(0,r.getPreferenceValues)(),t=await S(e.dragMode);if(!t)return;let s=`Distance: ${t} pixels`;e.copyToClipboard&&(s=`Distance of ${t} pixels successfully copied to clipboard`,await r.Clipboard.copy(t)),await(0,r.showToast)({style:r.Toast.Style.Success,title:s})}catch{await(0,r.showToast)({style:r.Toast.Style.Failure,title:"Failed to measure distance"})}}
