"use strict";var S=Object.create;var m=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var F=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,C=Object.prototype.hasOwnProperty;var L=(e,r)=>()=>(r||e((r={exports:{}}).exports,r),r.exports),M=(e,r)=>{for(var t in r)m(e,t,{get:r[t],enumerable:!0})},u=(e,r,t,s)=>{if(r&&typeof r=="object"||typeof r=="function")for(let o of F(r))!C.call(e,o)&&o!==t&&m(e,o,{get:()=>r[o],enumerable:!(s=k(r,o))||s.enumerable});return e};var f=(e,r,t)=>(t=e!=null?S(b(e)):{},u(r||!e||!e.__esModule?m(t,"default",{value:e,enumerable:!0}):t,e)),T=e=>u(m({},"__esModule",{value:!0}),e);var x=L((G,P)=>{"use strict";var U=require("os"),A=U.homedir();P.exports=e=>{if(typeof e!="string")throw new TypeError(`Expected a string, got ${typeof e}`);return A?e.replace(/^~(?=$|\/|\\)/,A):e}});var O={};M(O,{default:()=>$});module.exports=T(O);var c=require("@raycast/api");async function y(e,r,t,s){let o=await(0,c.showToast)({style:c.Toast.Style.Animated,title:e});try{let a=await s();return o.style=c.Toast.Style.Success,o.title=r,{isSuccess:!0,result:a,toast:o}}catch(a){return console.error(a),o.style=c.Toast.Style.Failure,o.title=t,o.message=`${a}`,{isSuccess:!1,toast:o}}}var h=require("child_process"),g=require("util"),n=(0,g.promisify)(h.exec);function d(e){let r;return Array.isArray(e)?r=e.map(t=>`-e '${t}'`).join(" "):r=`-e '${e}'`,n(`osascript ${r}`).then(t=>t.stdout)}var i=f(require("fs"));var w=i.default.promises.readdir,q=i.default.promises.mkdir,K=i.default.promises.rm,W=i.default.promises.readFile,_=i.default.promises.writeFile,z=i.default.promises.rm;var v=f(require("path")),D=f(x()),p=class{static clearDerivedData(){return d(['set dd to (path to home folder as string) & "Library:Developer:Xcode:DerivedData"','tell application "Finder"',"if dd exists then","move dd to trash","end if","end tell"]).then()}static removeDerivedData(r){let t=(0,D.default)("~/Library/Developer/Xcode/DerivedData");return w(t).then(s=>{let o=s.find(a=>a.split("-").slice(0,-1).join("-")===r);return o?d(`tell application "Finder" to delete POSIX file "${v.default.join(t,o)}"`).then():Promise.resolve()})}static clearSwiftPackageManagerCache(){return n("rm -rf ~/Library/org.swift.swiftpm && rm -rf ~/Library/Caches/org.swift.swiftpm").then()}static clearSwiftUIPreviewsCache(){return n("rm -rf ~/Library/Developer/Xcode/UserData/Previews").then()}static deleteUnsupportedSimulators(){return n("xcrun simctl delete unavailable").then()}};var l=require("@raycast/api"),$=async()=>{let e={icon:l.Icon.Trash,title:"Clear Swift Package Manager cache",message:"Are you sure you want to clear the Swift Package Manager cache?",primaryAction:{title:"Clear",style:l.Alert.ActionStyle.Destructive}};await(0,l.confirmAlert)(e)&&await y("Clearing Swift Package Manager cache","Successfully cleared Swift Package Manager cache","An error occurred while trying to clear the Swift Package Manager cache",p.clearSwiftPackageManagerCache)};
